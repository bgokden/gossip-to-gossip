// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gossip.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceMessage struct {
	Services             []string `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMessage) Reset()         { *m = ServiceMessage{} }
func (m *ServiceMessage) String() string { return proto.CompactTextString(m) }
func (*ServiceMessage) ProtoMessage()    {}
func (*ServiceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{0}
}
func (m *ServiceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMessage.Unmarshal(m, b)
}
func (m *ServiceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMessage.Marshal(b, m, deterministic)
}
func (dst *ServiceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMessage.Merge(dst, src)
}
func (m *ServiceMessage) XXX_Size() int {
	return xxx_messageInfo_ServiceMessage.Size(m)
}
func (m *ServiceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMessage proto.InternalMessageInfo

func (m *ServiceMessage) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type Peer struct {
	Address              string        `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Timestamp            int64         `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Version              string        `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Signature            []float64     `protobuf:"fixed64,4,rep,packed,name=signature" json:"signature,omitempty"`
	Extras               []*DoublePair `protobuf:"bytes,5,rep,name=extras" json:"extras,omitempty"`
	Info                 []*StringPair `protobuf:"bytes,6,rep,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{1}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (dst *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(dst, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Peer) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Peer) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Peer) GetSignature() []float64 {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Peer) GetExtras() []*DoublePair {
	if m != nil {
		return m.Extras
	}
	return nil
}

func (m *Peer) GetInfo() []*StringPair {
	if m != nil {
		return m.Info
	}
	return nil
}

type DoublePair struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoublePair) Reset()         { *m = DoublePair{} }
func (m *DoublePair) String() string { return proto.CompactTextString(m) }
func (*DoublePair) ProtoMessage()    {}
func (*DoublePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{2}
}
func (m *DoublePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoublePair.Unmarshal(m, b)
}
func (m *DoublePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoublePair.Marshal(b, m, deterministic)
}
func (dst *DoublePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoublePair.Merge(dst, src)
}
func (m *DoublePair) XXX_Size() int {
	return xxx_messageInfo_DoublePair.Size(m)
}
func (m *DoublePair) XXX_DiscardUnknown() {
	xxx_messageInfo_DoublePair.DiscardUnknown(m)
}

var xxx_messageInfo_DoublePair proto.InternalMessageInfo

func (m *DoublePair) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DoublePair) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type StringPair struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringPair) Reset()         { *m = StringPair{} }
func (m *StringPair) String() string { return proto.CompactTextString(m) }
func (*StringPair) ProtoMessage()    {}
func (*StringPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{3}
}
func (m *StringPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringPair.Unmarshal(m, b)
}
func (m *StringPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringPair.Marshal(b, m, deterministic)
}
func (dst *StringPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringPair.Merge(dst, src)
}
func (m *StringPair) XXX_Size() int {
	return xxx_messageInfo_StringPair.Size(m)
}
func (m *StringPair) XXX_DiscardUnknown() {
	xxx_messageInfo_StringPair.DiscardUnknown(m)
}

var xxx_messageInfo_StringPair proto.InternalMessageInfo

func (m *StringPair) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StringPair) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type PeerMessage struct {
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerMessage) Reset()         { *m = PeerMessage{} }
func (m *PeerMessage) String() string { return proto.CompactTextString(m) }
func (*PeerMessage) ProtoMessage()    {}
func (*PeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{4}
}
func (m *PeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMessage.Unmarshal(m, b)
}
func (m *PeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMessage.Marshal(b, m, deterministic)
}
func (dst *PeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMessage.Merge(dst, src)
}
func (m *PeerMessage) XXX_Size() int {
	return xxx_messageInfo_PeerMessage.Size(m)
}
func (m *PeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMessage proto.InternalMessageInfo

func (m *PeerMessage) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type JoinRequest struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
	Peer                 *Peer    `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{5}
}
func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (dst *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(dst, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *JoinRequest) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type JoinResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gossip_7d250437380f3d7d, []int{6}
}
func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (dst *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(dst, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceMessage)(nil), "protos.ServiceMessage")
	proto.RegisterType((*Peer)(nil), "protos.Peer")
	proto.RegisterType((*DoublePair)(nil), "protos.DoublePair")
	proto.RegisterType((*StringPair)(nil), "protos.StringPair")
	proto.RegisterType((*PeerMessage)(nil), "protos.PeerMessage")
	proto.RegisterType((*JoinRequest)(nil), "protos.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "protos.JoinResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GossipClient is the client API for Gossip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GossipClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	ExchangeServices(ctx context.Context, in *ServiceMessage, opts ...grpc.CallOption) (*ServiceMessage, error)
	ExchangePeers(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerMessage, error)
}

type gossipClient struct {
	cc *grpc.ClientConn
}

func NewGossipClient(cc *grpc.ClientConn) GossipClient {
	return &gossipClient{cc}
}

func (c *gossipClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/protos.Gossip/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gossipClient) ExchangeServices(ctx context.Context, in *ServiceMessage, opts ...grpc.CallOption) (*ServiceMessage, error) {
	out := new(ServiceMessage)
	err := c.cc.Invoke(ctx, "/protos.Gossip/ExchangeServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gossipClient) ExchangePeers(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerMessage, error) {
	out := new(PeerMessage)
	err := c.cc.Invoke(ctx, "/protos.Gossip/ExchangePeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GossipServer is the server API for Gossip service.
type GossipServer interface {
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	ExchangeServices(context.Context, *ServiceMessage) (*ServiceMessage, error)
	ExchangePeers(context.Context, *PeerMessage) (*PeerMessage, error)
}

func RegisterGossipServer(s *grpc.Server, srv GossipServer) {
	s.RegisterService(&_Gossip_serviceDesc, srv)
}

func _Gossip_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Gossip/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gossip_ExchangeServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).ExchangeServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Gossip/ExchangeServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).ExchangeServices(ctx, req.(*ServiceMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gossip_ExchangePeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GossipServer).ExchangePeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Gossip/ExchangePeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GossipServer).ExchangePeers(ctx, req.(*PeerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gossip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Gossip",
	HandlerType: (*GossipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Gossip_Join_Handler,
		},
		{
			MethodName: "ExchangeServices",
			Handler:    _Gossip_ExchangeServices_Handler,
		},
		{
			MethodName: "ExchangePeers",
			Handler:    _Gossip_ExchangePeers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gossip.proto",
}

func init() { proto.RegisterFile("gossip.proto", fileDescriptor_gossip_7d250437380f3d7d) }

var fileDescriptor_gossip_7d250437380f3d7d = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x8a, 0xd4, 0x40,
	0x10, 0x9d, 0x98, 0x4c, 0x74, 0x2a, 0xa3, 0x48, 0xb9, 0x48, 0x08, 0x1e, 0x42, 0x1f, 0x24, 0x88,
	0x2c, 0x38, 0x0b, 0x5e, 0xbc, 0xae, 0x08, 0xc2, 0xc2, 0xd2, 0xfb, 0x05, 0xbd, 0xbb, 0x65, 0x6c,
	0xd8, 0xe9, 0x8e, 0x5d, 0xc9, 0xb0, 0x9f, 0xe7, 0xd9, 0xaf, 0x92, 0xee, 0x4e, 0x26, 0x33, 0xe2,
	0x1c, 0xf6, 0x94, 0xd4, 0xab, 0x7a, 0xaf, 0xab, 0x5e, 0x15, 0xac, 0x5b, 0xcb, 0xac, 0xbb, 0xf3,
	0xce, 0xd9, 0xde, 0x62, 0x1e, 0x3e, 0x2c, 0x3e, 0xc2, 0xab, 0x1b, 0x72, 0x3b, 0x7d, 0x47, 0x57,
	0xc4, 0xac, 0x5a, 0xc2, 0x0a, 0x5e, 0x70, 0x44, 0xb8, 0x4c, 0xea, 0xb4, 0x59, 0xc9, 0x7d, 0x2c,
	0xfe, 0x24, 0x90, 0x5d, 0x13, 0x39, 0x2c, 0xe1, 0xb9, 0xba, 0xbf, 0x77, 0xc4, 0xbe, 0x26, 0x69,
	0x56, 0x72, 0x0a, 0xf1, 0x1d, 0xac, 0x7a, 0xbd, 0x25, 0xee, 0xd5, 0xb6, 0x2b, 0x9f, 0xd5, 0x49,
	0x93, 0xca, 0x19, 0xf0, 0xbc, 0x1d, 0x39, 0xd6, 0xd6, 0x94, 0x69, 0xe4, 0x8d, 0xa1, 0xe7, 0xb1,
	0x6e, 0x8d, 0xea, 0x07, 0x47, 0x65, 0x56, 0xa7, 0x4d, 0x22, 0x67, 0x00, 0x3f, 0x40, 0x4e, 0x8f,
	0xbd, 0x53, 0x5c, 0x2e, 0xeb, 0xb4, 0x29, 0x36, 0x18, 0xc7, 0xe0, 0xf3, 0x4b, 0x3b, 0xdc, 0x3e,
	0xd0, 0xb5, 0xd2, 0x4e, 0x8e, 0x15, 0xf8, 0x1e, 0x32, 0x6d, 0x7e, 0xd8, 0x32, 0x3f, 0xae, 0xbc,
	0xe9, 0x9d, 0x36, 0x6d, 0xa8, 0x0c, 0x79, 0xf1, 0x19, 0x60, 0x66, 0x23, 0x42, 0x66, 0xd4, 0x96,
	0xc6, 0x71, 0xc2, 0x3f, 0x9e, 0xc1, 0x72, 0xa7, 0x1e, 0x06, 0x0a, 0x73, 0x24, 0x32, 0x06, 0x9e,
	0x37, 0x6b, 0x3d, 0x81, 0xf7, 0x09, 0x0a, 0xef, 0xdd, 0xe4, 0xb3, 0x80, 0x65, 0x47, 0xe4, 0xa2,
	0xc9, 0xc5, 0x66, 0x3d, 0xf5, 0xe9, 0x6b, 0x64, 0x4c, 0x89, 0x2b, 0x28, 0xbe, 0x5b, 0x6d, 0x24,
	0xfd, 0x1a, 0x88, 0x7b, 0xef, 0xd1, 0x68, 0xf3, 0x7e, 0x37, 0x33, 0x80, 0x35, 0x64, 0x9e, 0x15,
	0x1e, 0xfd, 0x57, 0x2f, 0x64, 0x44, 0x03, 0xeb, 0x28, 0xc7, 0x9d, 0x35, 0x4c, 0xa7, 0xb7, 0xb8,
	0xf9, 0x9d, 0x40, 0xfe, 0x2d, 0xdc, 0x0b, 0x5e, 0x40, 0xe6, 0x49, 0xf8, 0x66, 0x12, 0x3c, 0xe8,
	0xa8, 0x3a, 0x3b, 0x06, 0xa3, 0xae, 0x58, 0xe0, 0x25, 0xbc, 0xfe, 0xfa, 0x78, 0xf7, 0x53, 0x99,
	0x96, 0xc6, 0xf3, 0x62, 0x7c, 0xbb, 0xdf, 0xc4, 0xd1, 0xc1, 0x55, 0x27, 0x70, 0xb1, 0xc0, 0x2f,
	0xf0, 0x72, 0x52, 0xf1, 0x53, 0xf0, 0xdc, 0xc3, 0x81, 0x91, 0xd5, 0xff, 0x40, 0xb1, 0xb8, 0x8d,
	0x17, 0x7e, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x98, 0x7b, 0x6b, 0x8f, 0xf8, 0x02, 0x00, 0x00,
}
