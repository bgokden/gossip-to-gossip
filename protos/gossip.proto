syntax = "proto3";
package protos;

// protoc -I protos/ protos/gossip.proto --go_out=plugins=grpc:protos
// The Gossip service definition.
service Gossip {
  rpc Join(JoinRequest) returns (JoinResponse) {}
  rpc ExchangeServices(ServiceMessage) returns (ServiceMessage) {}
  rpc ExchangePeers(PeerMessage) returns (PeerMessage) {}
}

service Registration {
  rpc Register(RegistrationRequest) returns (RegistrationResponse) {}
}

message RegistrationRequest{
  string token = 1;
  uint32 mode = 2;
  ConnectionInfo connectionInfo = 3;
}

message ConnectionInfo {
  repeated string addresses = 1;
  repeated BytesPair certs = 2;
}

message RegistrationResponse {
  uint32 code = 1;
  string error = 2;
  ConnectionInfo connectionInfo = 3;
}

message ServiceMessage {
  repeated string services = 1;
}

message Peer {
  ConnectionInfo connectionInfo = 1;
  uint32 mode = 2;
  uint64 timestamp = 3;
  string version = 4;
  repeated double signature = 5;
  repeated DoublePair doubleInfo = 6;
  repeated StringPair stringInfo = 7;
  repeated BytesPair bytesInfo = 8;
}

message DoublePair {
  string name = 1;
  double value = 2;
}

message StringPair {
  string name = 1;
  double value = 2;
}

message BytesPair {
  string name = 1;
  bytes value = 2;
}

message PeerMessage {
  repeated Peer peers = 1;
}

message JoinRequest {
  Peer peer = 1;
}

message JoinResponse {
  string address = 1; // received address
}
